// üîπ RegisterForm.jsx
import React, { useState } from "react";
import { Link } from "react-router-dom";
import "./RegisterForm.css";

function RegisterForm({ onRequestSms, onVerifyCode, onSubmit }) {
  const [formData, setFormData] = useState({
    firstName: "",
    lastName: "",
    age: "",
    phone: "",
    password: "",
    consent: false,
  });
  const [code, setCode] = useState("");
  const [step, setStep] = useState(1);
  const [error, setError] = useState("");

  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;
    setFormData((prev) => ({
      ...prev,
      [name]: type === "checkbox" ? checked : value,
    }));
  };

  const validate = () => {
    const { firstName, lastName, age, phone, password, consent } = formData;
    if (!firstName || !lastName || !age || !phone || !password || !consent) {
      setError("–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è —Ç–∞ –¥–∞–π—Ç–µ –∑–≥–æ–¥—É.");
      return false;
    }
    if (!/\+380\d{9}/.test(phone)) {
      setError("–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω—É.");
      return false;
    }
    return true;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (step === 1) {
      if (!validate()) return;
      try {
        await onRequestSms(formData);
        setStep(2);
      } catch {
        setError("–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ SMS");
      }
    } else {
      const isValid = await onVerifyCode(formData.phone, code);
      if (isValid) {
        onSubmit(formData);
      } else {
        setError("–ù–µ–≤—ñ—Ä–Ω–∏–π –∫–æ–¥");
      }
    }
  };

  return (
    <form onSubmit={handleSubmit} className="register-form">
      <h2>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è</h2>
      {error && <div className="form-error">{error}</div>}

      {step === 1 ? (
        <>
          <label>–Ü–º‚Äô—è:<input name="firstName" value={formData.firstName} onChange={handleChange} /></label>
          <label>–ü—Ä—ñ–∑–≤–∏—â–µ:<input name="lastName" value={formData.lastName} onChange={handleChange} /></label>
          <label>–í—ñ–∫:<input name="age" type="number" value={formData.age} onChange={handleChange} /></label>
          <label>–¢–µ–ª–µ—Ñ–æ–Ω:<input name="phone" value={formData.phone} onChange={handleChange} placeholder="+380..." /></label>
          <label>–ü–∞—Ä–æ–ª—å:<input name="password" type="password" value={formData.password} onChange={handleChange} /></label>
          <label className="checkbox-label">
            <input type="checkbox" name="consent" checked={formData.consent} onChange={handleChange} /> –ó–≥–æ–¥–∞ –Ω–∞ –æ–±—Ä–æ–±–∫—É –¥–∞–Ω–∏—Ö
          </label>
        </>
      ) : (
        <label>–ö–æ–¥ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è:<input value={code} onChange={(e) => setCode(e.target.value)} /></label>
      )}

      <button type="submit">
        {step === 1 ? "–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∫–æ–¥" : "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ —Ç–∞ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å"}
      </button>
      <Link to="/login" className="header_nav_button">–£–≤—ñ–π—Ç–∏</Link>
    </form>
  );
}

export default RegisterForm;
