// TelegramCallback.jsx
import { useEffect } from 'react';
import { useNavigate } from 'react-router-dom';

const TelegramCallback = () => {
  const navigate = useNavigate();

  useEffect(() => {
    const params = new URLSearchParams(window.location.search);
    const data = Object.fromEntries(params.entries());

    if (data.hash) {
      console.log('‚úÖ Telegram –¥–∞–Ω—ñ:', data);

      fetch('/api/verify-and-check', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data),
      })
        .then(async (res) => {
          if (!res.ok) {
            const err = await res.json();
            throw new Error(err.message || 'Auth error');
          }
          return res.json();
        })
        .then(result => {
          console.log('üéâ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞:', result);
          // –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∞–±–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
        })
        .catch(err => {
          console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:', err.message);
        });
    } else {
      console.warn('‚õî –ù–µ–º–∞—î hash ‚Äî –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤—ñ–¥—Ö–∏–ª–∏–≤ –∞–±–æ –Ω–µ Telegram —Ä–µ–¥–∏—Ä–µ–∫—Ç');
    }
  }, [navigate]);

  return <div>–ê–≤—Ç–æ—Ä–∏–∑—É—î–º–æ —á–µ—Ä–µ–∑ Telegram...</div>;
};

export default TelegramCallback;