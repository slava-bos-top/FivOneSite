import React, { useState } from "react";

const TelegramLogin = () => {
  const [phone, setPhone] = useState("");
  const [checking, setChecking] = useState(false);

  const [loginText, setLoginText] = useState(false);
  const encodedPhone = `phone_${phone.replace("+", "")}`;
  const telegramBotLink = `https://t.me/fivone_bot?start=confirm_${phone.replace("+", "")}`;

  const checkIfPhoneExists = async () => {
    const res = await fetch(`https://script.google.com/macros/s/AKfycbwsVFp2w9V957t3iKE4EsEY6poiBquD2M-Wu712Z-UfKrFBLYp6xD1wrBjufTe_zAwl/exec?phone=${phone.replace("+", "")}`);
    const data = await res.json();
    return data.confirmed === "true" || data.confirmed === true;
  };

  const startConfirmationPolling = () => {
    let attempts = 0;
    const maxAttempts = 50; // ~1 —Ö–≤–∏–ª–∏–Ω–∞

    const intervalId = setInterval(async () => {
      const exists = await checkIfPhoneExists();

      if (exists) {
        const checkRes = await fetch(
          `https://script.google.com/macros/s/AKfycbwsVFp2w9V957t3iKE4EsEY6poiBquD2M-Wu712Z-UfKrFBLYp6xD1wrBjufTe_zAwl/exec?phone=${phone.replace("+", "")}`
        );
        const checkData = await checkRes.json();
        clearInterval(intervalId);
        setChecking(false);
        localStorage.setItem("user", JSON.stringify({
          name: checkData.name,
          surname: checkData.surname,
          photo: checkData.photo,
          isLoggedIn: true,
        }));

        window.location.href = "https://fiv-one-site.vercel.app/";
      } else if (attempts >= maxAttempts) {
        clearInterval(intervalId);
        setChecking(false);
        alert("‚è≥ –ß–∞—Å –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–∏–π—à–æ–≤. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
      }

      attempts++;
    }, 5000);
  };

  const handleLogin = async (e) => {
    e.preventDefault();
    if (!phone) {
      alert("üì± –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É");
      return;
    }
  
    const res = await fetch(`https://script.google.com/macros/s/AKfycbwsVFp2w9V957t3iKE4EsEY6poiBquD2M-Wu712Z-UfKrFBLYp6xD1wrBjufTe_zAwl/exec?phone=${phone.replace("+", "")}`);
    const data = await res.json();
  
    if (data.confirmed) {
      console.log(data.confirmed)
      setLoginText(true)
      // –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ –Ω–∞—à API
      const response = await fetch("/api/send-message", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          chat_id: data.userId,
          text: `üëã –í—ñ—Ç–∞—î–º–æ, ${data.name} ${data.surname}! –í–∏ –≤–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ.`,
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏",
                  callback_data: "comfirmsignIn",
                },
              ],
            ],
          },
        }),
      });
  
      const result = await response.json();
  
      if (!result.success) {
        alert("‚ö†Ô∏è –í–∏ –≤–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ, –∞–ª–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ.");
        return;
      }

      console.log("üîÑ –û—á—ñ–∫—É—î–º–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —É Telegram...");

        // ‚è≥ –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–∂–Ω—ñ 3 —Å–µ–∫—É–Ω–¥–∏ –∫–æ–ª–æ–Ω–∫—É F
      const intervalId = setInterval(async () => {
        const checkRes = await fetch(
            `https://script.google.com/macros/s/AKfycbwsVFp2w9V957t3iKE4EsEY6poiBquD2M-Wu712Z-UfKrFBLYp6xD1wrBjufTe_zAwl/exec?phone=${phone.replace("+", "")}`
        );
        const checkData = await checkRes.json();
        console.log(checkData)
        const normalizedPhone = phone.replace("+", "")

        // –Ø–∫—â–æ –∫–æ–ª–æ–Ω–∫–∞ F = 1
        if (checkData.number === "1" || checkData.number === 1) {
            clearInterval(intervalId); // –∑—É–ø–∏–Ω—è—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É

            // alert(`‚úÖ –í—Ö—ñ–¥ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ! –í—ñ—Ç–∞—î–º–æ, ${checkData.name} ${checkData.surname}`);

            // üîÑ (–ù–µ–æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ) –æ–Ω–æ–≤–ª—é—î–º–æ –∫–æ–ª–æ–Ω–∫—É F –Ω–∞ "0", —è–∫—â–æ –º–∞—î—à API –¥–ª—è —Ü—å–æ–≥–æ
            await fetch("/api/set-confirmed-zero", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({
                phone: normalizedPhone,
                action: "resetConfirmed",
              }),
            });

            localStorage.setItem("user", JSON.stringify({
              name: checkData.name,
              surname: checkData.surname,
              photo: checkData.photo,
              isLoggedIn: true,
            }));

            window.location.href = "https://fiv-one-site.vercel.app/";

            // –î–∞–ª—ñ –º–æ–∂–Ω–∞ –∑–±–µ—Ä–µ–≥—Ç–∏ –≤ –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ –∞–±–æ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —ñ–Ω—à—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
            // –ú–æ–∂–Ω–∞ –∑—Ä–æ–±–∏—Ç–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é –∞–±–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
            // localStorage.setItem('user', JSON.stringify(checkData));
            // router.push('/dashboard');

        }
      }, 3000); 
  
      return;
    }
  
    // –Ø–∫—â–æ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π ‚Äî –≤—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ Telegram
    setChecking(true);
    window.open(telegramBotLink, "_blank");
    startConfirmationPolling();
  };

  const isLoading = checking || loginText;

  return (
    <div style={{
      width: "100%",
      minHeight: "100vh",
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      background: "linear-gradient(145deg, #e1f3ff, #ffce07, #f3faff)"
    }}>
      <div style={{
        background: "#fff",
        padding: "30px",
        borderRadius: "20px",
        boxShadow: "0 8px 20px rgba(0,0,0,0.1)",
        display: "flex",
        flexDirection: "column",
        alignItems: "center",
        gap: "20px",
        width: "100%",
        maxWidth: "400px",
        transition: "all 0.3s ease"
      }}>
    
        {/* üî∏ –ü—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç */}
        <div style={{
          backgroundColor: "#FFCE07",
          padding: "15px",
          borderRadius: "10px",
          textAlign: "center",
          color: "#333",
          fontWeight: 500,
          fontSize: "15px",
          lineHeight: "1.4"
        }}>
          –†–∞–¥—ñ –±–∞—á–∏—Ç–∏ —Ç–µ–±–µ —Å–µ—Ä–µ–¥ –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ –Ω–∞—à–∏—Ö –æ—Å–≤—ñ—Ç–Ω—ñ—Ö –ø—Ä–æ–≥—Ä–∞–º! –ó–∞–ª–∏—à–∏–ª–æ—Å—å –ª–∏—à–µ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è —ñ –ø–æ—á–∞—Ç–∏ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è –≤—Å—ñ–º–∞ –º–æ–∂–ª–∏–≤–æ—Å—Ç—è–º–∏, —è–∫—ñ –Ω–∞–¥–∞—î <strong>FivOn–µ</strong>. –ü—ñ—Å–ª—è —Ç–æ–≥–æ, —è–∫ —Ç–∏ –≤–≤–µ–¥–µ—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É, —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–±–µ –≤ –Ω–∞—à –ú–µ—Å–µ–Ω–¥–∂–µ—Ä <strong>Telegram</strong>. –ê –¥–∞–ª—ñ ‚Äì –ø—Ä–æ—Å—Ç–æ –∫—Ä–æ–∫—É–π –∑–∞ –Ω–∞—à–∏–º –±–æ—Ç–æ–º, –æ—Ç—Ä–∏–º—É–π –Ω–æ–≤—ñ –∑–Ω–∞–Ω–Ω—è —Ç–∞ —Å—Ç–∞–≤–∞–π —á–∞—Å—Ç–∏–Ω–æ—é <strong>FivOn–µ</strong>!
        </div>
    
        <h2 style={{ color: "#0088cc", marginBottom: "10px" }}>–í—Ö—ñ–¥ —á–µ—Ä–µ–∑ Telegram</h2>
    
        <input
          type="tel"
          placeholder="+380..."
          value={phone}
          onChange={(e) => setPhone(e.target.value)}
          style={{
            width: "100%",
            padding: "12px",
            fontSize: "16px",
            borderRadius: "10px",
            border: "1px solid #ccc",
            outline: "none",
            transition: "0.2s",
          }}
        />
    
        {isLoading ? (
          <div style={{ textAlign: "center", display: "flex", flexDirection: "column", alignItems: "center", gap: "12px" }}>
            <div className="loader" />
            <p style={{ margin: 0, color: "#333" }}>–û—á—ñ–∫—É—î–º–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —É Telegram...</p>
            <p style={{ fontSize: "14px", margin: 0 }}>
              –ü–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ&nbsp;
              <a href="https://t.me/fivone_bot" target="_blank" rel="noreferrer" style={{ color: "#0088cc" }}>
                @fivone_bot
              </a>
            </p>
          </div>
        ) : (
          <button
            onClick={handleLogin}
            disabled={!phone.trim()}
            style={{
              width: "100%",
              textAlign: "center",
              background: "#0088cc",
              color: "#fff",
              padding: "12px",
              fontSize: "16px",
              borderRadius: "10px",
              border: "none",
              cursor: "pointer",
              transition: "0.3s",
              opacity: !phone.trim() ? 0.5 : 1,
            }}
          >
            –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ —É Telegram
          </button>
        )}
      </div>
    
      {/* Loader CSS */}
      <style>{`
        .loader {
          width: 30px;
          height: 30px;
          border: 4px solid #f3f3f3;
          border-top: 4px solid #0088cc;
          border-radius: 50%;
          animation: spin 1s linear infinite;
        }
    
        @keyframes spin {
          0% { transform: rotate(0deg); }
          100% { transform: rotate(360deg); }
        }
      `}</style>
    </div>
  );
};

export default TelegramLogin;