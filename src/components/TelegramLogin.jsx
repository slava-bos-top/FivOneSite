// TelegramLogin.jsx
import { useState } from 'react';
import { LoginButton } from '@telegram-auth/react';
import { AuthDataValidator } from '@telegram-auth/server';
import { urlStrToAuthDataMap } from '@telegram-auth/server/utils';

function TelegramLogin() {
  const [user, setUser] = useState(null);
  const [error, setError] = useState(null);

  const handleAuth = async (data) => {
    console.log("üì¶ –û—Ç—Ä–∏–º–∞–Ω–æ Telegram –¥–∞–Ω—ñ:", data);

    try {
      const validator = new AuthDataValidator({
        botToken: process.env.REACT_APP_BOT_TOKEN, // –ù–ï –í–ò–ö–õ–ê–î–ê–ô –í –ü–†–û–î–ê–ö–®–ù üî•
      });

      // Telegram –ø–æ–≤–µ—Ä—Ç–∞—î `data` —è–∫ –æ–±'—î–∫—Ç (–∞ –Ω–µ URL), —Ç–æ–º—É –ø—Ä–æ—Å—Ç–æ –≤–∞–ª—ñ–¥—É—î–º–æ –Ω–∞–ø—Ä—è–º—É:
      const userData = await validator.validate(data);
      console.log("‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–∏–π:", userData);
      setUser(userData);
    } catch (err) {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ Telegram –ª–æ–≥—ñ–Ω—É:", err);
      setError('Telegram login validation failed');
    }
  };

  return (
    <div style={{ textAlign: 'center', marginTop: '2rem' }}>
      <h2>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —á–µ—Ä–µ–∑ Telegram</h2>

      {user ? (
        <div>
          <p>–í—ñ—Ç–∞—î–º–æ, {user.first_name}!</p>
          <img src={user.photo_url} alt="avatar" width="100" style={{ borderRadius: '50%' }} />
        </div>
      ) : (
        <LoginButton
          botUsername={process.env.REACT_APP_BOT_USERNAME}
          onAuthCallback={handleAuth}
          buttonSize="large"
          cornerRadius={10}
          showAvatar={true}
          lang="uk"
        />
      )}

      {error && <p style={{ color: 'red' }}>{error}</p>}
    </div>
  );
}

export default TelegramLogin;