import { useEffect, useState } from 'react';

// üü¢ –ì–õ–û–ë–ê–õ–¨–ù–ê –§–£–ù–ö–¶–Ü–Ø –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó Telegram (–º–∞—î –±—É—Ç–∏ –î–û –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞)
window.onTelegramAuth = async (userData) => {
  console.log('‚úÖ Telegram –ø–æ–≤–µ—Ä–Ω—É–≤ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', userData);

  try {
    const res = await fetch('/api/verify-and-check', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(userData),
    });

    const result = await res.json();
    console.log('üì° –í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ verify-and-check:', result);

    if (result.status === 'known') {
      alert(`‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ —è–∫ ${userData.first_name}`);
    } else if (result.status === 'unknown') {
      console.log("üîÅ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ startLink...");
      window.location.href = result.startLink;
    } else {
      console.warn('‚ö†Ô∏è –ù–µ–≤—ñ–¥–æ–º–∏–π —Å—Ç–∞—Ç—É—Å:', result.status);
    }
  } catch (err) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:', err);
  }
};

const TelegramLogin = () => {
  const [status, setStatus] = useState('pending');

  useEffect(() => {
    const botUsername = process.env.REACT_APP_BOT_USERNAME;
    console.log('üîß Bot username –∑ env:', botUsername);

    if (!botUsername) {
      console.error('‚ùå Bot username –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ .env');
      return;
    }

    const script = document.createElement('script');
    script.src = 'https://telegram.org/js/telegram-widget.js?22';
    script.setAttribute('data-telegram-login', botUsername);
    script.setAttribute('data-size', 'large');
    script.setAttribute('data-userpic', 'false');
    script.setAttribute('data-request-access', 'write');
    script.setAttribute('data-onauth', 'onTelegramAuth(user)');
    script.async = true;

    const container = document.getElementById('telegram-button');
    if (container) {
      container.innerHTML = ''; // –û—á–∏—Å—Ç–∏—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Å–∫—Ä–∏–ø—Ç (—è–∫—â–æ –±—É–≤)
      container.appendChild(script);
    } else {
      console.error('‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑ id="telegram-button"');
    }

    setStatus('waiting');
  }, []);

  return (
    <div style={{ textAlign: 'center', marginTop: '2rem' }}>
      <h1 style={{ marginBottom: '20px' }}>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —á–µ—Ä–µ–∑ Telegram</h1>
      {status === 'waiting' ? (
        <div id="telegram-button"></div>
      ) : (
        <p>‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—ñ–¥–∂–µ—Ç–∞...</p>
      )}
    </div>
  );
};

export default TelegramLogin;
