import React, { useState } from "react";

const TelegramLogin = () => {
  const [phone, setPhone] = useState("");
  const [checking, setChecking] = useState(false);
  const encodedPhone = `phone_${phone.replace("+", "")}`;
  const telegramBotLink = `https://t.me/fivone_bot?start=confirm_${phone.replace("+", "")}`;

  const checkIfPhoneExists = async () => {
    const res = await fetch(`https://script.google.com/macros/s/AKfycbyQejB8Li7jz5J1KqUx6UOJgbETM7t-96KC7h_5fb_AlY-zx8ZWoxRCpmpTwgq_-7BT/exec?phone=${phone.replace("+", "")}`);
    const data = await res.json();
    return data.confirmed === "true" || data.confirmed === true;
  };

  const startConfirmationPolling = () => {
    let attempts = 0;
    const maxAttempts = 12; // ~1 —Ö–≤–∏–ª–∏–Ω–∞

    const intervalId = setInterval(async () => {
      const exists = await checkIfPhoneExists();

      if (exists) {
        clearInterval(intervalId);
        setChecking(false);
        alert("‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞!");
      } else if (attempts >= maxAttempts) {
        clearInterval(intervalId);
        setChecking(false);
        alert("‚è≥ –ß–∞—Å –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–∏–π—à–æ–≤. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
      }

      attempts++;
    }, 5000);
  };

  const handleLogin = async (e) => {
    e.preventDefault();
    if (!phone) {
      alert("üì± –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É");
      return;
    }
  
    const res = await fetch(`https://script.google.com/macros/s/AKfycbyQejB8Li7jz5J1KqUx6UOJgbETM7t-96KC7h_5fb_AlY-zx8ZWoxRCpmpTwgq_-7BT/exec?phone=${phone.replace("+", "")}`);
    const data = await res.json();
  
    if (data.confirmed) {
      console.log(data.confirmed)
      // –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ –Ω–∞—à API
      const response = await fetch("/api/send-message", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          chat_id: data.userId,
          text: `üëã –í—ñ—Ç–∞—î–º–æ, ${data.name} ${data.surname}! –í–∏ –≤–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ.`,
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏",
                  callback_data: "comfirmsignIn",
                },
              ],
            ],
          },
        }),
      });
  
      const result = await response.json();
  
      if (!result.success) {
        alert("‚ö†Ô∏è –í–∏ –≤–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ, –∞–ª–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ.");
        return;
      }

      console.log("üîÑ –û—á—ñ–∫—É—î–º–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —É Telegram...");

        // ‚è≥ –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–∂–Ω—ñ 3 —Å–µ–∫—É–Ω–¥–∏ –∫–æ–ª–æ–Ω–∫—É F
      const intervalId = setInterval(async () => {
        const checkRes = await fetch(
            `https://script.google.com/macros/s/AKfycbyQejB8Li7jz5J1KqUx6UOJgbETM7t-96KC7h_5fb_AlY-zx8ZWoxRCpmpTwgq_-7BT/exec?phone=${phone.replace("+", "")}`
        );
        const checkData = await checkRes.json();
        console.log(checkData)
        const normalizedPhone = phone.replace("+", "")

        // –Ø–∫—â–æ –∫–æ–ª–æ–Ω–∫–∞ F = 1
        if (checkData.number === "1" || checkData.number === 1) {
            clearInterval(intervalId); // –∑—É–ø–∏–Ω—è—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É

            alert(`‚úÖ –í—Ö—ñ–¥ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ! –í—ñ—Ç–∞—î–º–æ, ${checkData.name} ${checkData.surname}`);

            // üîÑ (–ù–µ–æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ) –æ–Ω–æ–≤–ª—é—î–º–æ –∫–æ–ª–æ–Ω–∫—É F –Ω–∞ "0", —è–∫—â–æ –º–∞—î—à API –¥–ª—è —Ü—å–æ–≥–æ
            await fetch("/api/set-confirmed-zero", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({
                phone: normalizedPhone,
                action: "resetConfirmed",
              }),
            });

            // –î–∞–ª—ñ –º–æ–∂–Ω–∞ –∑–±–µ—Ä–µ–≥—Ç–∏ –≤ –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ –∞–±–æ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —ñ–Ω—à—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
            // –ú–æ–∂–Ω–∞ –∑—Ä–æ–±–∏—Ç–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é –∞–±–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
            // localStorage.setItem('user', JSON.stringify(checkData));
            // router.push('/dashboard');

        }
      }, 3000); 
  
      return;
    }
  
    // –Ø–∫—â–æ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π ‚Äî –≤—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ Telegram
    setChecking(true);
    window.open(telegramBotLink, "_blank");
    startConfirmationPolling();
  };

  return (
    <div style={{ width: "100%", alignItems: "center", paddingTop: "100px", display: "flex", justifyContent: "center" }}>
      <div style={{ display: "flex", flexDirection: "column", gap: "12px", maxWidth: "300px" }}>
        <input
          type="tel"
          placeholder="+380..."
          value={phone}
          onChange={(e) => setPhone(e.target.value)}
          style={{ padding: "8px", fontSize: "16px" }}
        />

        <button
          onClick={handleLogin}
          disabled={checking}
          style={{
            textAlign: "center",
            background: "#0088cc",
            color: "#fff",
            padding: "10px",
            borderRadius: "6px",
            border: "none",
            cursor: "pointer",
          }}
        >
          {checking ? "‚è≥ –û—á—ñ–∫—É—î–º–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è..." : "–£–≤—ñ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram"}
        </button>
      </div>
    </div>
  );
};

export default TelegramLogin;